{"version":3,"sources":["store/MyContext.js","components/Task.js","components/EditTask.js","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","reducer","state","action","type","taskList1","Object","toConsumableArray","tasks","forEach","t","id","status","newStatus","saveStateToLocalStorage","edit","editTask","objectSpread","taskList2","push","newTask","taskList4","filter","task","taskList3","newEditTask","property","value","taskList5","active","taskEdit","window","localStorage","setItem","JSON","stringify","MyProvider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","componentDidMount","initState","Date","now","title","content","color","dispatch","setState","localStorageTasks","getItem","localStorageEdit","localStorageEditTask","parse","inherits","createClass","key","react_default","a","createElement","Provider","props","children","Component","Task","handleDragStart","e","dataTransfer","setData","toggleActive","handleDelete","handleEdit","stopPropagation","_this2","classString","className","draggable","onDragStart","onClick","hidden","contextType","EditTask","handleTitleChange","target","handleContentChange","handleColorChange","toLowerCase","handleCreateTask","resetForm","handleEditSave","handleEditCancel","htmlFor","onChange","selected","App","handleDrop","getData","classList","remove","handleDragOver","preventDefault","contains","add","handleDragExit","handleDragLeave","getAllTaskWithStatus","sort","b","map","components_Task","todolist","doinglist","donelist","components_EditTask","droppable","onDrop","onDragOver","onDragExit","onDragLeave","Boolean","location","hostname","match","ReactDOM","render","MyContext_MyProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.349ba48b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport const context = React.createContext();\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_STATUS\":\r\n            const taskList1 = [...state.tasks];\r\n            taskList1.forEach(t => {\r\n                if (t.id === +action.id){\r\n                    t.status = action.newStatus;\r\n                }\r\n            });\r\n            saveStateToLocalStorage(taskList1, state.edit, state.editTask);\r\n            return { ...state, tasks: taskList1 };\r\n        case \"CREATE_TASK\":\r\n            const taskList2 = [...state.tasks];\r\n            taskList2.push(action.newTask);\r\n            saveStateToLocalStorage(taskList2, state.edit, state.editTask);\r\n            return { ...state, tasks: taskList2 };\r\n        case \"DELETE_TASK\":\r\n            const taskList4 = [...state.tasks].filter(t => t.id !== +action.id);\r\n            saveStateToLocalStorage(taskList4, state.edit, state.editTask);\r\n            return { ...state, tasks: taskList4 };\r\n        case \"SET_EDIT_TRUE\":\r\n            saveStateToLocalStorage(state.tasks, true, action.task);\r\n            return { ...state, edit: true, editTask: action.task };\r\n        case \"SET_EDIT_FALSE\":\r\n            saveStateToLocalStorage(state.tasks, false, {});\r\n            return { ...state, edit: false, editTask: {} };\r\n        case \"SAVE_EDIT_TASK\":\r\n            const taskList3 = [...state.tasks].filter(t => t.id !== +state.editTask.id);\r\n            taskList3.push(state.editTask);\r\n            saveStateToLocalStorage(taskList3, false, state.editTask);\r\n            return { ...state, tasks: taskList3, edit: false, editTask: {} };\r\n        case \"EDIT_TASK_PROPERTY\":\r\n            const newEditTask = {...state.editTask};\r\n            newEditTask[action.property] = action.value;\r\n            saveStateToLocalStorage(state.tasks, state.edit, newEditTask);\r\n            return {...state, editTask: newEditTask};\r\n        case \"TOGGLE_ACTIVE\":\r\n            const taskList5 = [...state.tasks];\r\n            taskList5.forEach(t => {\r\n                if (t.id === +action.task.id){\r\n                    t.active = !t.active;\r\n                }\r\n            });\r\n            saveStateToLocalStorage(taskList5, state.edit, state.editTask);\r\n            return { ...state, tasks: taskList5 };\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nconst saveStateToLocalStorage = (tasks, edit, taskEdit) => {\r\n    window.localStorage.setItem(\"tasks\",  JSON.stringify(tasks));\r\n    window.localStorage.setItem(\"edit\",  edit);\r\n    window.localStorage.setItem(\"editTask\",  JSON.stringify(taskEdit));\r\n}\r\n\r\nexport class MyProvider extends Component {\r\n\r\n    componentDidMount = () => {\r\n        const initState = {\r\n            edit: false,\r\n            editTask: {\r\n                id: Date.now(),\r\n                title: \"\",\r\n                content: \"\",\r\n                active: false,\r\n                status: \"todo\",\r\n                color: \"green\",\r\n            },\r\n            tasks: [],\r\n            dispatch: action => {\r\n                this.setState(state => reducer(state, action));\r\n            }\r\n        }\r\n        const localStorageTasks = window.localStorage.getItem(\"tasks\");\r\n        const localStorageEdit = window.localStorage.getItem(\"edit\");\r\n        const localStorageEditTask = window.localStorage.getItem(\"editTask\");\r\n        if (localStorageTasks && localStorageEdit && localStorageEditTask) {\r\n            this.setState({tasks: JSON.parse(localStorageTasks), edit: JSON.parse(localStorageEdit), editTask: JSON.parse(localStorageEditTask)});\r\n        } else {\r\n            this.setState(initState);\r\n        }\r\n    }\r\n\r\n    state = {\r\n        dispatch: action => {this.setState(state => reducer(state, action));\r\n    }}\r\n\r\n    render() {\r\n        return (\r\n            <context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </context.Provider>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { context } from '../store/MyContext.js';\r\n\r\nexport class Task extends Component {\r\n\r\n    state = {};\r\n\r\n    componentWillMount() {\r\n        const initState = {\r\n            id: this.props.id,\r\n            //active: this.props.active,\r\n        }\r\n        this.setState(initState);\r\n    }\r\n    \r\n    handleDragStart = (e) => {\r\n        e.dataTransfer.setData(\"id\", this.state.id);\r\n    }\r\n    toggleActive = (e) => {\r\n        //this.setState({active: !this.state.active});\r\n        const task = this.context.tasks.filter(t => t.id === this.state.id)[0];\r\n        this.context.dispatch({type: \"TOGGLE_ACTIVE\", task: task});\r\n    }\r\n    handleDelete = (e) => {\r\n        this.context.dispatch({type: \"DELETE_TASK\", id: this.state.id});\r\n    }\r\n    handleEdit = (e) => {\r\n        e.stopPropagation();\r\n        const task = this.context.tasks.filter(t => t.id === this.state.id)[0];\r\n        this.context.dispatch({type: \"SET_EDIT_TRUE\", task: task});\r\n    }\r\n\r\n  render() {\r\n    const task = this.context.tasks.filter(t => t.id === this.state.id)[0];\r\n    const classString = \"task \" + task.color;\r\n    return (\r\n      <div className={classString} draggable onDragStart={this.handleDragStart} onClick={this.toggleActive}>\r\n        <h2>{task.title}</h2>\r\n        <p className=\"content\" hidden={this.props.active}>{task.content}</p>\r\n        <span onClick={this.handleDelete} hidden={this.state.active} className=\"tool-btn float-right\"><i className=\"fas fa-trash\"></i></span>\r\n        <span onClick={this.handleEdit} hidden={this.state.active} className=\"tool-btn float-right\"><i className=\"fas fa-edit\"></i></span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTask.contextType = context;\r\nexport default Task\r\n\r\n","import React, { Component } from 'react';\r\nimport { context } from '../store/MyContext.js';\r\n\r\nexport class EditTask extends Component {\r\n\r\n    state = {\r\n        id: Date.now(),\r\n        title: \"\",\r\n        content: \"\",\r\n        active: false,\r\n        status: \"todo\",\r\n        color: \"green\",\r\n    };\r\n\r\n    handleTitleChange = (e) => {\r\n        if (this.context.edit) {\r\n            this.context.dispatch({ type: \"EDIT_TASK_PROPERTY\", property: \"title\", value: e.target.value });\r\n        } else {\r\n            this.setState({ title: e.target.value });\r\n        }\r\n    }\r\n    handleContentChange = (e) => {\r\n        if (this.context.edit) {\r\n            this.context.dispatch({ type: \"EDIT_TASK_PROPERTY\", property: \"content\", value: e.target.value });\r\n        } else {\r\n            this.setState({ content: e.target.value });\r\n        }\r\n    }\r\n    handleColorChange = (e) => {\r\n        if (this.context.edit) {\r\n            this.context.dispatch({ type: \"EDIT_TASK_PROPERTY\", property: \"color\", value: e.target.value.toLowerCase() });\r\n        } else {\r\n        this.setState({ color: e.target.value.toLowerCase() });\r\n    }\r\n    }\r\n    handleCreateTask = () => {\r\n        this.context.dispatch({ type: \"CREATE_TASK\", newTask: this.state });\r\n        this.resetForm();\r\n    }\r\n    handleEditSave = () => {\r\n        this.context.dispatch({ type: \"SAVE_EDIT_TASK\", task: this.state });\r\n    }\r\n    handleEditCancel = () => {\r\n        this.resetForm();\r\n        this.context.dispatch({ type: \"SET_EDIT_FALSE\" });\r\n    }\r\n    resetForm = () => {\r\n        this.setState({\r\n            id: Date.now(),\r\n            title: \"\",\r\n            content: \"\",\r\n            active: false,\r\n            status: \"todo\",\r\n            color: \"green\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.context.editTask && this.context.edit) {\r\n            return (\r\n                <div>\r\n                <div className=\"form-group\">\r\n                <h2>EDIT</h2>\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input id=\"title\" className=\"form-control\" type=\"text\" onChange={this.handleTitleChange} value={this.context.editTask.title} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"form-control\" onChange={this.handleContentChange} value={this.context.editTask.content} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control\" onChange={this.handleColorChange}>\r\n                            <option selected={this.context.editTask.color === \"green\"}>GREEN</option>\r\n                            <option selected={this.context.editTask.color === \"yellow\"}>YELLOW</option>\r\n                            <option selected={this.context.editTask.color === \"red\"}>RED</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-success float-right\" onClick={this.handleEditSave}>SAVE</button>\r\n                        <button className=\"btn btn-secondary flex\" onClick={this.handleEditCancel}>CANCEL</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                <div className=\"form-group\">\r\n                <h2>NEW</h2>\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input id=\"title\" className=\"form-control\" type=\"text\" onChange={this.handleTitleChange} value={this.state.title} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"form-control\" onChange={this.handleContentChange} value={this.state.content} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control\" onChange={this.handleColorChange} value={this.state.color}>\r\n                            <option>GREEN</option>\r\n                            <option>YELLOW</option>\r\n                            <option>RED</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\" onClick={this.handleCreateTask}>Create Task</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nEditTask.contextType = context;\r\nexport default EditTask","import React, { Component } from 'react';\nimport './App.scss';\nimport { context } from './store/MyContext.js';\nimport Task from './components/Task.js';\nimport EditTask from './components/EditTask.js';\n\nclass App extends Component {\n\n  handleDrop = (e, newStatus) => {\n    const id = e.dataTransfer.getData(\"id\");\n    this.context.dispatch({ type: \"CHANGE_STATUS\", id, newStatus });\n    e.target.classList.remove(\"dragover\");\n  }\n  handleDragOver = (e) => {\n    e.preventDefault();\n    if (e.target.classList.contains(\"taskcontainer\")) {\n      e.target.classList.add(\"dragover\");\n    }\n  }\n  handleDragExit = (e) => {\n    e.preventDefault();\n    if (e.target.classList.contains(\"taskcontainer\")) {\n      e.target.classList.remove(\"dragover\");\n    }\n  }\n  handleDragLeave = (e) => {\n    e.preventDefault();\n    if (e.target.classList.contains(\"taskcontainer\")) {\n      e.target.classList.remove(\"dragover\");\n    }\n  }\n  getAllTaskWithStatus = (status) => {\n    return this.context.tasks\n      .filter(t => t.status === status)\n      .sort((a, b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0))\n      .map(t => <Task key={t.id} id={t.id} title={t.title} content={t.content} status={t.status} color={t.color} active={t.active} />);\n  }\n\n  render() {\n    let todolist = <div></div>;\n    let doinglist = <div></div>;\n    let donelist = <div></div>;\n    if (this.context.tasks) {\n      todolist = this.getAllTaskWithStatus(\"todo\");\n      doinglist = this.getAllTaskWithStatus(\"doing\");\n      donelist = this.getAllTaskWithStatus(\"done\");\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"container app-container\">\n          <div className=\"row navbar-header\">\n            <div className=\"col-3 dashboard-header text-center\">\n            </div>\n            <div className=\"col-3 todo-header text-center\">\n              Todo\n            </div>\n            <div className=\"col-3 doing-header text-center\">\n              Doing\n            </div>\n            <div className=\"col-3 done-header text-center\">\n              Done\n            </div>\n          </div>\n          <div className=\"row task-row\">\n            <div className=\"col-3 dashboard\">\n              <EditTask />\n            </div>\n            <div className=\"col-3 todo taskcontainer\" droppable=\"true\" onDrop={(e) => { this.handleDrop(e, \"todo\") }} onDragOver={this.handleDragOver} onDragExit={this.handleDragExit} onDragLeave={this.handleDragLeave}>\n              {todolist}\n            </div>\n            <div className=\"col-3 doing taskcontainer\" droppable=\"true\" onDrop={(e) => { this.handleDrop(e, \"doing\") }} onDragOver={this.handleDragOver} onDragExit={this.handleDragExit} onDragLeave={this.handleDragLeave}>\n              {doinglist}\n            </div>\n            <div className=\"col-3 done taskcontainer\" droppable=\"true\" onDrop={(e) => { this.handleDrop(e, \"done\") }} onDragOver={this.handleDragOver} onDragExit={this.handleDragExit} onDragLeave={this.handleDragLeave}>\n              {donelist}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp.contextType = context;\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MyProvider } from './store/MyContext.js';\n\nReactDOM.render(<MyProvider><App /></MyProvider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}